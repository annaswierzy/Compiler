# Compiler

## Description
This project is a compiler for a simple imperative language that translates code into virtual machine instructions. It is written in C++.

## File Overview
- `parser.y` – parser written in C++ using **Bison**
- `lexer.l` – lexer written in C++ using **Flex**
- `Makefile` – used to compile the compiler
- `README` – program description, file overview, usage instructions, and author information
- `maszyna-wirtualna-cln` – compiled virtual machine that executes the code generated by the compiler
- `compiler-description` - contains a detailed specification of compiler behavior, the source language grammar, the target virtual machine 

## Requirements
To compile and run the program, the following tools are required:
- C++ compiler (e.g., `g++`)
- `make`
- `Flex`
- `Bison`

## Installation and Compilation
To compile the program, run:

```sh
make

## Usage 
To run the compiler, use the following syntax:

./kompilator <input_filename> <output_filename>

### Example:
./kompilator input.txt output.txt

## Author
Anna Świerzy
